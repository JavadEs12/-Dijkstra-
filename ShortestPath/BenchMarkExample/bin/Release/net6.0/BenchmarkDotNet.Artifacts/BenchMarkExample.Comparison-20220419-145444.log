// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 1 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\javad\Source\Repos\NewRepo\ShortestPath\BenchMarkExample\bin\Release\net6.0\1ff02b73-2695-4ee6-8193-6aa598801cac
// command took 1.48s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\javad\Source\Repos\NewRepo\ShortestPath\BenchMarkExample\bin\Release\net6.0\1ff02b73-2695-4ee6-8193-6aa598801cac
// command took 12.34s and exited with 1
// start dotnet build -c Release  --no-restore --no-dependencies /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\javad\Source\Repos\NewRepo\ShortestPath\BenchMarkExample\bin\Release\net6.0\1ff02b73-2695-4ee6-8193-6aa598801cac
// command took 2.22s and exited with 0
// ***** Done, took 00:00:16 (16.13 sec)   *****
// Found 1 benchmarks:
//   Comparison.Implementatio: DefaultJob

// **************************
// Benchmark: Comparison.Implementatio: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "1ff02b73-2695-4ee6-8193-6aa598801cac.dll" --benchmarkName "BenchMarkExample.Comparison.Implementatio" --job "Default" --benchmarkId 0 in C:\Users\javad\Source\Repos\NewRepo\ShortestPath\BenchMarkExample\bin\Release\net6.0\1ff02b73-2695-4ee6-8193-6aa598801cac\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.4 (6.0.422.16404), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 205400.00 ns, 205.4000 us/op
WorkloadJitting  1: 1 op, 113945000.00 ns, 113.9450 ms/op

WorkloadPilot    1: 2 op, 295200.00 ns, 147.6000 us/op
WorkloadPilot    2: 3 op, 386200.00 ns, 128.7333 us/op
WorkloadPilot    3: 4 op, 847700.00 ns, 211.9250 us/op
WorkloadPilot    4: 5 op, 515500.00 ns, 103.1000 us/op
WorkloadPilot    5: 6 op, 699500.00 ns, 116.5833 us/op
WorkloadPilot    6: 7 op, 972000.00 ns, 138.8571 us/op
WorkloadPilot    7: 8 op, 940200.00 ns, 117.5250 us/op
WorkloadPilot    8: 9 op, 806200.00 ns, 89.5778 us/op
WorkloadPilot    9: 10 op, 1135000.00 ns, 113.5000 us/op
WorkloadPilot   10: 11 op, 1417500.00 ns, 128.8636 us/op
WorkloadPilot   11: 12 op, 1280700.00 ns, 106.7250 us/op
WorkloadPilot   12: 13 op, 1245900.00 ns, 95.8385 us/op
WorkloadPilot   13: 14 op, 1323400.00 ns, 94.5286 us/op
WorkloadPilot   14: 15 op, 2224200.00 ns, 148.2800 us/op
WorkloadPilot   15: 16 op, 2465000.00 ns, 154.0625 us/op
WorkloadPilot   16: 32 op, 4554000.00 ns, 142.3125 us/op
WorkloadPilot   17: 64 op, 8168800.00 ns, 127.6375 us/op
WorkloadPilot   18: 128 op, 13158500.00 ns, 102.8008 us/op
WorkloadPilot   19: 256 op, 25256100.00 ns, 98.6566 us/op
WorkloadPilot   20: 512 op, 52763600.00 ns, 103.0539 us/op
WorkloadPilot   21: 1024 op, 109006900.00 ns, 106.4521 us/op
WorkloadPilot   22: 2048 op, 185116400.00 ns, 90.3889 us/op
WorkloadPilot   23: 4096 op, 333050400.00 ns, 81.3111 us/op
WorkloadPilot   24: 8192 op, 608390300.00 ns, 74.2664 us/op

WorkloadWarmup   1: 8192 op, 562779300.00 ns, 68.6986 us/op
WorkloadWarmup   2: 8192 op, 570923500.00 ns, 69.6928 us/op
WorkloadWarmup   3: 8192 op, 569900300.00 ns, 69.5679 us/op
WorkloadWarmup   4: 8192 op, 583279500.00 ns, 71.2011 us/op
WorkloadWarmup   5: 8192 op, 574192100.00 ns, 70.0918 us/op
WorkloadWarmup   6: 8192 op, 581380000.00 ns, 70.9692 us/op

// BeforeActualRun
WorkloadActual   1: 8192 op, 580711700.00 ns, 70.8877 us/op
WorkloadActual   2: 8192 op, 569411000.00 ns, 69.5082 us/op
WorkloadActual   3: 8192 op, 582639900.00 ns, 71.1230 us/op
WorkloadActual   4: 8192 op, 562251200.00 ns, 68.6342 us/op
WorkloadActual   5: 8192 op, 568682800.00 ns, 69.4193 us/op
WorkloadActual   6: 8192 op, 578262300.00 ns, 70.5887 us/op
WorkloadActual   7: 8192 op, 565589200.00 ns, 69.0417 us/op
WorkloadActual   8: 8192 op, 569916400.00 ns, 69.5699 us/op
WorkloadActual   9: 8192 op, 577193600.00 ns, 70.4582 us/op
WorkloadActual  10: 8192 op, 578147300.00 ns, 70.5746 us/op
WorkloadActual  11: 8192 op, 581269500.00 ns, 70.9557 us/op
WorkloadActual  12: 8192 op, 571508900.00 ns, 69.7643 us/op
WorkloadActual  13: 8192 op, 572249900.00 ns, 69.8547 us/op
WorkloadActual  14: 8192 op, 578259700.00 ns, 70.5883 us/op
WorkloadActual  15: 8192 op, 561205500.00 ns, 68.5065 us/op

// AfterActualRun
WorkloadResult   1: 8192 op, 580711700.00 ns, 70.8877 us/op
WorkloadResult   2: 8192 op, 569411000.00 ns, 69.5082 us/op
WorkloadResult   3: 8192 op, 582639900.00 ns, 71.1230 us/op
WorkloadResult   4: 8192 op, 562251200.00 ns, 68.6342 us/op
WorkloadResult   5: 8192 op, 568682800.00 ns, 69.4193 us/op
WorkloadResult   6: 8192 op, 578262300.00 ns, 70.5887 us/op
WorkloadResult   7: 8192 op, 565589200.00 ns, 69.0417 us/op
WorkloadResult   8: 8192 op, 569916400.00 ns, 69.5699 us/op
WorkloadResult   9: 8192 op, 577193600.00 ns, 70.4582 us/op
WorkloadResult  10: 8192 op, 578147300.00 ns, 70.5746 us/op
WorkloadResult  11: 8192 op, 581269500.00 ns, 70.9557 us/op
WorkloadResult  12: 8192 op, 571508900.00 ns, 69.7643 us/op
WorkloadResult  13: 8192 op, 572249900.00 ns, 69.8547 us/op
WorkloadResult  14: 8192 op, 578259700.00 ns, 70.5883 us/op
WorkloadResult  15: 8192 op, 561205500.00 ns, 68.5065 us/op
GC:  32 8 0 168624512 8192
Threading:  0 0 8192

// AfterAll
// Benchmark Process 9148 has exited with code 0.

Mean = 69.965 μs, StdErr = 0.219 μs (0.31%), N = 15, StdDev = 0.847 μs
Min = 68.507 μs, Q1 = 69.464 μs, Median = 69.855 μs, Q3 = 70.589 μs, Max = 71.123 μs
IQR = 1.125 μs, LowerFence = 67.777 μs, UpperFence = 72.276 μs
ConfidenceInterval = [69.060 μs; 70.870 μs] (CI 99.9%), Margin = 0.905 μs (1.29% of Mean)
Skewness = -0.27, Kurtosis = 1.63, MValue = 2

// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\BenchMarkExample.Comparison-report.csv
  BenchmarkDotNet.Artifacts\results\BenchMarkExample.Comparison-report-github.md
  BenchmarkDotNet.Artifacts\results\BenchMarkExample.Comparison-report.html

// * Detailed results *
Comparison.Implementatio: DefaultJob
Runtime = .NET 6.0.4 (6.0.422.16404), X64 RyuJIT; GC = Concurrent Workstation
Mean = 69.965 μs, StdErr = 0.219 μs (0.31%), N = 15, StdDev = 0.847 μs
Min = 68.507 μs, Q1 = 69.464 μs, Median = 69.855 μs, Q3 = 70.589 μs, Max = 71.123 μs
IQR = 1.125 μs, LowerFence = 67.777 μs, UpperFence = 72.276 μs
ConfidenceInterval = [69.060 μs; 70.870 μs] (CI 99.9%), Margin = 0.905 μs (1.29% of Mean)
Skewness = -0.27, Kurtosis = 1.63, MValue = 2
-------------------- Histogram --------------------
[68.056 μs ; 70.083 μs) | @@@@@@@@
[70.083 μs ; 71.574 μs) | @@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.13.1, OS=Windows 10.0.22000
Intel Core i7-8550U CPU 1.80GHz (Kaby Lake R), 1 CPU, 8 logical and 4 physical cores
.NET SDK=6.0.202
  [Host]     : .NET 6.0.4 (6.0.422.16404), X64 RyuJIT
  DefaultJob : .NET 6.0.4 (6.0.422.16404), X64 RyuJIT


|        Method |     Mean |    Error |   StdDev | Rank |  Gen 0 |  Gen 1 | Allocated |
|-------------- |---------:|---------:|---------:|-----:|-------:|-------:|----------:|
| Implementatio | 69.96 μs | 0.905 μs | 0.847 μs |    1 | 3.9063 | 0.9766 |     20 KB |

// * Legends *
  Mean      : Arithmetic mean of all measurements
  Error     : Half of 99.9% confidence interval
  StdDev    : Standard deviation of all measurements
  Rank      : Relative position of current benchmark mean among all benchmarks (Arabic style)
  Gen 0     : GC Generation 0 collects per 1000 operations
  Gen 1     : GC Generation 1 collects per 1000 operations
  Allocated : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  1 μs      : 1 Microsecond (0.000001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:28 (28.51 sec), executed benchmarks: 1

Global total time: 00:00:44 (44.65 sec), executed benchmarks: 1
// * Artifacts cleanup *
