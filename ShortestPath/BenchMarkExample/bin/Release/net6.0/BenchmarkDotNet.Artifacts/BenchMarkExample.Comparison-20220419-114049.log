// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 1 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\javad\Source\Repos\NewRepo\ShortestPath\BenchMarkExample\bin\Release\net6.0\6de6c51c-fb2e-44b5-8eb4-df7a5fbe542f
// command took 1.48s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\javad\Source\Repos\NewRepo\ShortestPath\BenchMarkExample\bin\Release\net6.0\6de6c51c-fb2e-44b5-8eb4-df7a5fbe542f
// command took 12.53s and exited with 1
// start dotnet build -c Release  --no-restore --no-dependencies /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\javad\Source\Repos\NewRepo\ShortestPath\BenchMarkExample\bin\Release\net6.0\6de6c51c-fb2e-44b5-8eb4-df7a5fbe542f
// command took 2.22s and exited with 0
// ***** Done, took 00:00:16 (16.31 sec)   *****
// Found 1 benchmarks:
//   Comparison.LowestNodeCostByLinq: DefaultJob

// **************************
// Benchmark: Comparison.LowestNodeCostByLinq: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "6de6c51c-fb2e-44b5-8eb4-df7a5fbe542f.dll" --benchmarkName "BenchMarkExample.Comparison.LowestNodeCostByLinq" --job "Default" --benchmarkId 0 in C:\Users\javad\Source\Repos\NewRepo\ShortestPath\BenchMarkExample\bin\Release\net6.0\6de6c51c-fb2e-44b5-8eb4-df7a5fbe542f\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.4 (6.0.422.16404), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 203100.00 ns, 203.1000 us/op
WorkloadJitting  1: 1 op, 3084600.00 ns, 3.0846 ms/op

OverheadJitting  2: 16 op, 390000.00 ns, 24.3750 us/op
WorkloadJitting  2: 16 op, 305400.00 ns, 19.0875 us/op

WorkloadPilot    1: 16 op, 27700.00 ns, 1.7312 us/op
WorkloadPilot    2: 32 op, 86100.00 ns, 2.6906 us/op
WorkloadPilot    3: 64 op, 124200.00 ns, 1.9406 us/op
WorkloadPilot    4: 128 op, 423700.00 ns, 3.3102 us/op
WorkloadPilot    5: 256 op, 1028300.00 ns, 4.0168 us/op
WorkloadPilot    6: 512 op, 917000.00 ns, 1.7910 us/op
WorkloadPilot    7: 1024 op, 1906400.00 ns, 1.8617 us/op
WorkloadPilot    8: 2048 op, 3738900.00 ns, 1.8256 us/op
WorkloadPilot    9: 4096 op, 5426100.00 ns, 1.3247 us/op
WorkloadPilot   10: 8192 op, 10554200.00 ns, 1.2884 us/op
WorkloadPilot   11: 16384 op, 24053800.00 ns, 1.4681 us/op
WorkloadPilot   12: 32768 op, 46472300.00 ns, 1.4182 us/op
WorkloadPilot   13: 65536 op, 86019600.00 ns, 1.3126 us/op
WorkloadPilot   14: 131072 op, 162251600.00 ns, 1.2379 us/op
WorkloadPilot   15: 262144 op, 244664600.00 ns, 933.3214 ns/op
WorkloadPilot   16: 524288 op, 490210900.00 ns, 935.0031 ns/op
WorkloadPilot   17: 1048576 op, 825598600.00 ns, 787.3522 ns/op

OverheadWarmup   1: 1048576 op, 2365200.00 ns, 2.2556 ns/op
OverheadWarmup   2: 1048576 op, 2236400.00 ns, 2.1328 ns/op
OverheadWarmup   3: 1048576 op, 2229000.00 ns, 2.1257 ns/op
OverheadWarmup   4: 1048576 op, 2467800.00 ns, 2.3535 ns/op
OverheadWarmup   5: 1048576 op, 2370500.00 ns, 2.2607 ns/op
OverheadWarmup   6: 1048576 op, 2283800.00 ns, 2.1780 ns/op
OverheadWarmup   7: 1048576 op, 2233300.00 ns, 2.1298 ns/op
OverheadWarmup   8: 1048576 op, 2360100.00 ns, 2.2508 ns/op
OverheadWarmup   9: 1048576 op, 3035800.00 ns, 2.8952 ns/op
OverheadWarmup  10: 1048576 op, 2376100.00 ns, 2.2660 ns/op

OverheadActual   1: 1048576 op, 2345400.00 ns, 2.2367 ns/op
OverheadActual   2: 1048576 op, 2280500.00 ns, 2.1749 ns/op
OverheadActual   3: 1048576 op, 2284500.00 ns, 2.1787 ns/op
OverheadActual   4: 1048576 op, 2148200.00 ns, 2.0487 ns/op
OverheadActual   5: 1048576 op, 2211400.00 ns, 2.1090 ns/op
OverheadActual   6: 1048576 op, 2182100.00 ns, 2.0810 ns/op
OverheadActual   7: 1048576 op, 2383600.00 ns, 2.2732 ns/op
OverheadActual   8: 1048576 op, 2340600.00 ns, 2.2322 ns/op
OverheadActual   9: 1048576 op, 2253300.00 ns, 2.1489 ns/op
OverheadActual  10: 1048576 op, 2619800.00 ns, 2.4984 ns/op
OverheadActual  11: 1048576 op, 2356700.00 ns, 2.2475 ns/op
OverheadActual  12: 1048576 op, 2288800.00 ns, 2.1828 ns/op
OverheadActual  13: 1048576 op, 2328900.00 ns, 2.2210 ns/op
OverheadActual  14: 1048576 op, 2284800.00 ns, 2.1790 ns/op
OverheadActual  15: 1048576 op, 2377800.00 ns, 2.2676 ns/op

WorkloadWarmup   1: 1048576 op, 854882800.00 ns, 815.2798 ns/op
WorkloadWarmup   2: 1048576 op, 832396000.00 ns, 793.8347 ns/op
WorkloadWarmup   3: 1048576 op, 824019500.00 ns, 785.8462 ns/op
WorkloadWarmup   4: 1048576 op, 827398900.00 ns, 789.0691 ns/op
WorkloadWarmup   5: 1048576 op, 829344800.00 ns, 790.9248 ns/op
WorkloadWarmup   6: 1048576 op, 831959000.00 ns, 793.4179 ns/op
WorkloadWarmup   7: 1048576 op, 833275100.00 ns, 794.6731 ns/op
WorkloadWarmup   8: 1048576 op, 834212300.00 ns, 795.5668 ns/op
WorkloadWarmup   9: 1048576 op, 828834900.00 ns, 790.4386 ns/op
WorkloadWarmup  10: 1048576 op, 831382800.00 ns, 792.8684 ns/op
WorkloadWarmup  11: 1048576 op, 827222100.00 ns, 788.9005 ns/op

// BeforeActualRun
WorkloadActual   1: 1048576 op, 826102600.00 ns, 787.8328 ns/op
WorkloadActual   2: 1048576 op, 824398300.00 ns, 786.2075 ns/op
WorkloadActual   3: 1048576 op, 831242200.00 ns, 792.7343 ns/op
WorkloadActual   4: 1048576 op, 832572000.00 ns, 794.0025 ns/op
WorkloadActual   5: 1048576 op, 826477600.00 ns, 788.1905 ns/op
WorkloadActual   6: 1048576 op, 827111100.00 ns, 788.7946 ns/op
WorkloadActual   7: 1048576 op, 831199400.00 ns, 792.6935 ns/op
WorkloadActual   8: 1048576 op, 825459700.00 ns, 787.2197 ns/op
WorkloadActual   9: 1048576 op, 828305900.00 ns, 789.9341 ns/op
WorkloadActual  10: 1048576 op, 858605100.00 ns, 818.8296 ns/op
WorkloadActual  11: 1048576 op, 834854700.00 ns, 796.1795 ns/op
WorkloadActual  12: 1048576 op, 831479200.00 ns, 792.9604 ns/op
WorkloadActual  13: 1048576 op, 827470100.00 ns, 789.1370 ns/op
WorkloadActual  14: 1048576 op, 832136400.00 ns, 793.5871 ns/op
WorkloadActual  15: 1048576 op, 828646500.00 ns, 790.2589 ns/op

// AfterActualRun
WorkloadResult   1: 1048576 op, 823813800.00 ns, 785.6501 ns/op
WorkloadResult   2: 1048576 op, 822109500.00 ns, 784.0247 ns/op
WorkloadResult   3: 1048576 op, 828953400.00 ns, 790.5516 ns/op
WorkloadResult   4: 1048576 op, 830283200.00 ns, 791.8198 ns/op
WorkloadResult   5: 1048576 op, 824188800.00 ns, 786.0077 ns/op
WorkloadResult   6: 1048576 op, 824822300.00 ns, 786.6118 ns/op
WorkloadResult   7: 1048576 op, 828910600.00 ns, 790.5107 ns/op
WorkloadResult   8: 1048576 op, 823170900.00 ns, 785.0369 ns/op
WorkloadResult   9: 1048576 op, 826017100.00 ns, 787.7513 ns/op
WorkloadResult  10: 1048576 op, 832565900.00 ns, 793.9967 ns/op
WorkloadResult  11: 1048576 op, 829190400.00 ns, 790.7776 ns/op
WorkloadResult  12: 1048576 op, 825181300.00 ns, 786.9542 ns/op
WorkloadResult  13: 1048576 op, 829847600.00 ns, 791.4043 ns/op
WorkloadResult  14: 1048576 op, 826357700.00 ns, 788.0761 ns/op

// AfterAll
// Benchmark Process 13440 has exited with code 0.

Mean = 788.512 ns, StdErr = 0.799 ns (0.10%), N = 14, StdDev = 2.989 ns
Min = 784.025 ns, Q1 = 786.159 ns, Median = 787.914 ns, Q3 = 790.721 ns, Max = 793.997 ns
IQR = 4.562 ns, LowerFence = 779.315 ns, UpperFence = 797.565 ns
ConfidenceInterval = [785.140 ns; 791.884 ns] (CI 99.9%), Margin = 3.372 ns (0.43% of Mean)
Skewness = 0.19, Kurtosis = 1.64, MValue = 2

// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\BenchMarkExample.Comparison-report.csv
  BenchmarkDotNet.Artifacts\results\BenchMarkExample.Comparison-report-github.md
  BenchmarkDotNet.Artifacts\results\BenchMarkExample.Comparison-report.html

// * Detailed results *
Comparison.LowestNodeCostByLinq: DefaultJob
Runtime = .NET 6.0.4 (6.0.422.16404), X64 RyuJIT; GC = Concurrent Workstation
Mean = 788.512 ns, StdErr = 0.799 ns (0.10%), N = 14, StdDev = 2.989 ns
Min = 784.025 ns, Q1 = 786.159 ns, Median = 787.914 ns, Q3 = 790.721 ns, Max = 793.997 ns
IQR = 4.562 ns, LowerFence = 779.315 ns, UpperFence = 797.565 ns
ConfidenceInterval = [785.140 ns; 791.884 ns] (CI 99.9%), Margin = 3.372 ns (0.43% of Mean)
Skewness = 0.19, Kurtosis = 1.64, MValue = 2
-------------------- Histogram --------------------
[782.397 ns ; 795.625 ns) | @@@@@@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.13.1, OS=Windows 10.0.22000
Intel Core i7-8550U CPU 1.80GHz (Kaby Lake R), 1 CPU, 8 logical and 4 physical cores
.NET SDK=6.0.202
  [Host]     : .NET 6.0.4 (6.0.422.16404), X64 RyuJIT
  DefaultJob : .NET 6.0.4 (6.0.422.16404), X64 RyuJIT


|               Method |     Mean |   Error |  StdDev | Rank |
|--------------------- |---------:|--------:|--------:|-----:|
| LowestNodeCostByLinq | 788.5 ns | 3.37 ns | 2.99 ns |    1 |

// * Hints *
Outliers
  Comparison.LowestNodeCostByLinq: Default -> 1 outlier  was  removed (818.83 ns)

// * Legends *
  Mean   : Arithmetic mean of all measurements
  Error  : Half of 99.9% confidence interval
  StdDev : Standard deviation of all measurements
  Rank   : Relative position of current benchmark mean among all benchmarks (Arabic style)
  1 ns   : 1 Nanosecond (0.000000001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:24 (24.17 sec), executed benchmarks: 1

Global total time: 00:00:40 (40.49 sec), executed benchmarks: 1
// * Artifacts cleanup *
