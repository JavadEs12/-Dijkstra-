// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 1 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\javad\Source\Repos\NewRepo\ShortestPath\BenchMarkExample\bin\Release\net6.0\387e95a4-5ab4-41c9-8122-83b7c6d8cfea
// command took 1.73s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\javad\Source\Repos\NewRepo\ShortestPath\BenchMarkExample\bin\Release\net6.0\387e95a4-5ab4-41c9-8122-83b7c6d8cfea
// command took 12.62s and exited with 1
// start dotnet build -c Release  --no-restore --no-dependencies /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\javad\Source\Repos\NewRepo\ShortestPath\BenchMarkExample\bin\Release\net6.0\387e95a4-5ab4-41c9-8122-83b7c6d8cfea
// command took 2.21s and exited with 0
// ***** Done, took 00:00:16 (16.73 sec)   *****
// Found 1 benchmarks:
//   Comparison.LowestNodeCostByLinq: DefaultJob

// **************************
// Benchmark: Comparison.LowestNodeCostByLinq: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "387e95a4-5ab4-41c9-8122-83b7c6d8cfea.dll" --benchmarkName "BenchMarkExample.Comparison.LowestNodeCostByLinq" --job "Default" --benchmarkId 0 in C:\Users\javad\Source\Repos\NewRepo\ShortestPath\BenchMarkExample\bin\Release\net6.0\387e95a4-5ab4-41c9-8122-83b7c6d8cfea\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.4 (6.0.422.16404), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 196500.00 ns, 196.5000 us/op
WorkloadJitting  1: 1 op, 3408700.00 ns, 3.4087 ms/op

OverheadJitting  2: 16 op, 205800.00 ns, 12.8625 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.ArgumentException: An item with the same key has already been added. Key: a
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at BenchMarkExample.Search.LowestNodeCostByLinq() in C:\Users\javad\Source\Repos\NewRepo\ShortestPath\BenchMarkExample\Search.cs:line 22
   at BenchMarkExample.Comparison.LowestNodeCostByLinq() in C:\Users\javad\Source\Repos\NewRepo\ShortestPath\BenchMarkExample\Comparison.cs:line 12
   at BenchmarkDotNet.Autogenerated.Runnable_0.WorkloadActionUnroll(Int64 invokeCount) in C:\Users\javad\Source\Repos\NewRepo\ShortestPath\BenchMarkExample\bin\Release\net6.0\387e95a4-5ab4-41c9-8122-83b7c6d8cfea\387e95a4-5ab4-41c9-8122-83b7c6d8cfea.notcs:line 817
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_0.Run(IHost host, String benchmarkName) in C:\Users\javad\Source\Repos\NewRepo\ShortestPath\BenchMarkExample\bin\Release\net6.0\387e95a4-5ab4-41c9-8122-83b7c6d8cfea\387e95a4-5ab4-41c9-8122-83b7c6d8cfea.notcs:line 167
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Span`1& arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in C:\Users\javad\Source\Repos\NewRepo\ShortestPath\BenchMarkExample\bin\Release\net6.0\387e95a4-5ab4-41c9-8122-83b7c6d8cfea\387e95a4-5ab4-41c9-8122-83b7c6d8cfea.notcs:line 51
// AfterAll
// Benchmark Process 16792 has exited with code -1.


// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\BenchMarkExample.Comparison-report.csv
  BenchmarkDotNet.Artifacts\results\BenchMarkExample.Comparison-report-github.md
  BenchmarkDotNet.Artifacts\results\BenchMarkExample.Comparison-report.html

// * Detailed results *
Comparison.LowestNodeCostByLinq: DefaultJob
Runtime = .NET 6.0.4 (6.0.422.16404), X64 RyuJIT; GC = Concurrent Workstation
There are not any results runs

// * Summary *

BenchmarkDotNet=v0.13.1, OS=Windows 10.0.22000
Intel Core i7-8550U CPU 1.80GHz (Kaby Lake R), 1 CPU, 8 logical and 4 physical cores
.NET SDK=6.0.202
  [Host]     : .NET 6.0.4 (6.0.422.16404), X64 RyuJIT
  DefaultJob : .NET 6.0.4 (6.0.422.16404), X64 RyuJIT


|               Method | Mean | Error | Rank |
|--------------------- |-----:|------:|-----:|
| LowestNodeCostByLinq |   NA |    NA |    ? |

Benchmarks with issues:
  Comparison.LowestNodeCostByLinq: DefaultJob

// * Legends *
  Mean  : Arithmetic mean of all measurements
  Error : Half of 99.9% confidence interval
  Rank  : Relative position of current benchmark mean among all benchmarks (Arabic style)
  1 ns  : 1 Nanosecond (0.000000001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:00 (0.68 sec), executed benchmarks: 1

Global total time: 00:00:17 (17.42 sec), executed benchmarks: 1
// * Artifacts cleanup *
